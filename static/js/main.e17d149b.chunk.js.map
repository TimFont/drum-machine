{"version":3,"sources":["components/Navbar.js","components/Pad.js","imports/audioBanks.js","components/Display.js","components/Machine.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Navbar","react_default","a","createElement","className","href","src","logo","width","height","alt","Component","Pad","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","playSound","bind","assertThisInitialized","keyBiding","ev","audio","type","document","querySelector","concat","target","dataset","key","toUpperCase","soundName","binding","index","id","onChangeSound","play","addEventListener","_this2","buttons","map","element","keyCode","style","data-target","keyTrigger","onClick","data-index","url","audioBanks","bankOne","bankTwo","Display","fontSize","currentSound","Machine","state","power","volume","currentBank","banks","changeBank","onOff","changeVolume","changeCurrentSound","setState","console","log","value","Pad_Pad","outline","Display_Display","htmlFor","onChange","App","Navbar_Navbar","Machine_Machine","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.e17d149b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport logo from '../logo.svg';\r\n\r\nexport default class Navbar extends Component {\r\n\r\n    render() {\r\n        return(\r\n            <nav className=\"navbar navbar-dark bg-primary fixed-top\">\r\n                <a className=\"navbar-brand\" href=\"/\">\r\n                    <img src={logo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\r\n                        Drum Machine\r\n                </a>\r\n            </nav>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class Pad extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.playSound = this.playSound.bind(this);\r\n        this.keyBiding = this.keyBiding.bind(this);\r\n    }\r\n    componentDidMount(){\r\n        this.keyBiding();\r\n    }\r\n\r\n    playSound(ev){\r\n        let audio = {};\r\n\r\n        if(ev.type === 'click'){\r\n            audio = document.querySelector(`#${ev.target.dataset.target}`);\r\n        }else if(ev.type === 'keydown'){\r\n            audio = document.querySelector(`#${ev.key.toUpperCase()}`);\r\n        }else {\r\n            return\r\n        }\r\n\r\n        if(audio){\r\n            const soundName = this.props.binding[audio.dataset.index].id;\r\n            this.props.onChangeSound(soundName);\r\n            audio.play();\r\n        }else{\r\n            return\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    keyBiding(){\r\n        document.addEventListener('keydown', this.playSound);\r\n    }\r\n\r\n    render(){\r\n\r\n        const buttons = this.props.binding.map( (element, index) => \r\n            <div className=\"col-4\" key={element.keyCode + 'col'}>\r\n                <button className=\"btn btn-secondary w-100 m-2 drum-pad\" \r\n                        style={ {height:'60px'} } \r\n                        data-target={element.keyTrigger}\r\n                        id={`button${element.keyTrigger}`} \r\n                        key={element.keyCode}\r\n                        onClick={this.playSound}>\r\n                    { element.keyTrigger }\r\n                    <audio id={element.keyTrigger} data-index={index} src={element.url} className=\"clip\"></audio>\r\n                </button>\r\n                \r\n            </div>\r\n            );\r\n\r\n        return(\r\n            <div className=\"pad h-100 w-100\">\r\n                <div className=\"row\">\r\n                    {buttons}\r\n                </div>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}","const bankOne = [{\r\n    keyCode: 81,\r\n    keyTrigger: 'Q',\r\n    id: 'Heater-1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\r\n  }, {\r\n    keyCode: 87,\r\n    keyTrigger: 'W',\r\n    id: 'Heater-2',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\r\n  }, {\r\n    keyCode: 69,\r\n    keyTrigger: 'E',\r\n    id: 'Heater-3',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\r\n  }, {\r\n    keyCode: 65,\r\n    keyTrigger: 'A',\r\n    id: 'Heater-4',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\r\n  }, {\r\n    keyCode: 83,\r\n    keyTrigger: 'S',\r\n    id: 'Clap',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\r\n  }, {\r\n    keyCode: 68,\r\n    keyTrigger: 'D',\r\n    id: 'Open-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\r\n  }, {\r\n    keyCode: 90,\r\n    keyTrigger: 'Z',\r\n    id: \"Kick-n'-Hat\",\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\r\n  }, {\r\n    keyCode: 88,\r\n    keyTrigger: 'X',\r\n    id: 'Kick',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\r\n  }, {\r\n    keyCode: 67,\r\n    keyTrigger: 'C',\r\n    id: 'Closed-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\r\n  },\r\n];\r\n\r\nconst bankTwo = [{\r\n    keyCode: 81,\r\n    keyTrigger: 'Q',\r\n    id: 'Chord-1',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\r\n  }, {\r\n    keyCode: 87,\r\n    keyTrigger: 'W',\r\n    id: 'Chord-2',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\r\n  }, {\r\n    keyCode: 69,\r\n    keyTrigger: 'E',\r\n    id: 'Chord-3',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\r\n  }, {\r\n    keyCode: 65,\r\n    keyTrigger: 'A',\r\n    id: 'Shaker',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\r\n  }, {\r\n    keyCode: 83,\r\n    keyTrigger: 'S',\r\n    id: 'Open-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\r\n  }, {\r\n    keyCode: 68,\r\n    keyTrigger: 'D',\r\n    id: 'Closed-HH',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\r\n  }, {\r\n    keyCode: 90,\r\n    keyTrigger: 'Z',\r\n    id: 'Punchy-Kick',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\r\n  }, {\r\n    keyCode: 88,\r\n    keyTrigger: 'X',\r\n    id: 'Side-Stick',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\r\n  }, {\r\n    keyCode: 67,\r\n    keyTrigger: 'C',\r\n    id: 'Snare',\r\n    url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\r\n  }];\r\n\r\nconst audioBanks = {\r\n    bankOne,\r\n    bankTwo\r\n}\r\n\r\nexport default audioBanks;","import React, { Component } from 'react';\r\n\r\nexport default class Display extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"w-100 bg-secondary rounded text-dark p-2 mt-3 mb-3 text-center\" id=\"display\">\r\n                <p className=\"text-uppercase font-weight-light d-inline my-0 align-bottom\" style={{fontSize:'20px'}}>\r\n                    {this.props.currentSound}\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Pad from './Pad';\r\nimport audioBanks from '../imports/audioBanks';\r\nimport Display from './Display';\r\n\r\n\r\n\r\nexport default class Machine extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            power: true,\r\n            volume: 0.5,\r\n            currentBank: 'bankOne',\r\n            banks : audioBanks,\r\n            currentSound: ' '\r\n        }\r\n\r\n        this.changeBank = this.changeBank.bind(this);\r\n        this.onOff = this.onOff.bind(this);\r\n        this.changeVolume = this.changeVolume.bind(this);\r\n        this.changeCurrentSound = this.changeCurrentSound.bind(this);\r\n        \r\n\r\n    }\r\n\r\n    onOff(){\r\n        this.setState(({power: !this.state.power}));\r\n        console.log(this.state.power);\r\n    }\r\n\r\n    changeBank(){\r\n        if(this.state.currentBank === 'bankOne'){\r\n            this.setState( ( { currentBank: 'bankTwo'} ) );\r\n        }else {\r\n            this.setState( ( { currentBank: 'bankOne'} ) ); \r\n        }\r\n\r\n    }\r\n\r\n    changeVolume(ev){\r\n\r\n        console.log(ev.target.value);\r\n    }\r\n\r\n    changeCurrentSound(soundName){\r\n        this.setState( ( {currentSound  : soundName } ) );\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"bg-primary text-light rounded p-3\" id=\"drum-machine\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-7\">\r\n                        <Pad onChangeSound={this.changeCurrentSound} binding={this.state.banks[this.state.currentBank]} />\r\n                    </div>\r\n                    <div className=\"col-5 p-2\">\r\n                        <button className={'btn d-block mx-auto ' + (this.state.power ? 'btn-danger' : 'btn-success')}\r\n                                onClick={this.onOff}\r\n                                style={{width:'50px', outline:'none'}}>\r\n                            {(this.state.power) ? 'OFF' : 'ON'}\r\n                        </button>\r\n                        <Display currentSound={this.state.currentSound} />\r\n                        <div className=\"mt-2 mb-2\">\r\n                            <label htmlFor=\"formControlRange\">Volume</label>\r\n                            <input onChange={ this.changeVolume } type=\"range\" className=\"form-control-range\" id=\"formControlRange\" />\r\n                        </div>\r\n                        <button onClick={ this.changeBank }> change Sound </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport Navbar from './components/Navbar';\nimport Machine from './components/Machine';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App bg-secondary\" style={ {height: '100vh'} }>\n        <Navbar />\n        <div className=\"row align-items-center justify-content-center h-100\">\n            <div className=\"col-12 col-md-8\">\n              <Machine />\n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}